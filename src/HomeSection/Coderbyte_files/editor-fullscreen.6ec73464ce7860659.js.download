$(document).ready(function(){Vue.component('vue-multiselect',window.VueMultiselect.default);var app=new Vue({el:'#fullscreenEditorArea',data:{'icons':window.__editor_shared.icons,'svgIcons':window.__editor_shared.svgIcons,'authObject':window.__authObject,'challengeInfo':window.__challengeInfo,'errorObject':window.__errorObject,'orgInfo':window.__orgInfo,'guestView':!window.__authObject.cookieSet,'dropdownLanguages':window.__MAIN_DROP_DOWN_LANGUAGES,'dropdownLanguagesFrontend':[],'editor':null,'spreadsheet':null,'jupyter':null,'editorVimFunction':!1,'editorVimObject':null,'editorVimMode':!1,'editorEmacsFunction':!1,'editorEmacsObject':null,'editorEmacsMode':!1,'editorLightMode':!1,'editorAppSetupStarted':!1,'currentlyRunningCode':!1,'currentlyRunningTests':!1,'currentlySubmitting':!1,'initDisplayCode':'language template not found','mobileDeviceShowing':!0,'mobileDeviceType':null,'mobileDeviceContent':'','consoleOutputLog':['output logs will appear here',''],'autoClearLog':!1,'confirmSubmitCode':!1,'errorFromLastOutput':!1,'bothTestCasesCorrect':!1,'exampleArgInput':null,'exampleArgInput2':null,'secondParamRequired':!1,'languageFromDropdown':null,'showingAllLanguagesDropdown':!1,'showValidatedFeedback':null,'showTestCasesForSpreadsheet':[0,0],'SQLTableOutput':'<p>Your table output will appear here</p>','SQLOriginalTableOutput':!1,'SQLShowingOriginalTable':!1,'MongoDBOriginalTableOutput':!1,'saveKey':!1,'saveKeyFiletree':!1,'saveKeyFiletreeContents':!1,'frontEndRenderingKey':!1,'backendFrameworkClient':null,'backendFrameworkClientStartedConnecting':!1,'firstTimeKey':'__cb_candidate_first_time','copiedCodeKey':'last-copied-code-from-coderbyte','editorThemeKey':'__cb_editor_theme','alreadyCopyPasted':!1,'timerArea':'__insert_time_left','projectBasedChallenge':!1,'filetreeSelectedParentDir':undefined,'filetreeSelected':undefined,'filetreeSelected__mostRecentFile':undefined,'filetree':[],'filetreeWithContents':[],'filetreeClosedDirsMapping':{},'filetreeJupyterFilesArray':[],'filetreeJupyterMapping':{},'jupyterHiddenGradedFile':null,'jupyterGradingComplete':!1,'modals':{'copying':!1,'screenRecordingBlocked':!1,'assessmentBlockedRedo':!1,'firstTimeOnEditor':!1,'guestWantsToSubmit':!1,'outputModificationInfo':!1,'openingFrameworkContainer':!1,'submittingFrameworkContainer':!1,},'webSearchCache':{},'searchEnabledForOrg':!1,'webSearchProps':{'mainSearchContainer':'.gsc-control-wrapper-cse','textArea':'#gsc-i-id1','searchButton':'.gsc-search-button','searchResultRow':'.gsc-webResult.gsc-result','pageModalDataContainer':'#modalPageData','pageModalDataContainerShow':!1,'toolbarExternalLink':!1,'pageiframeContainer':'#webSearchFrame','timesAttempted':0,},},created:function(){if(this.authObject&&this.authObject.assessmentDetails&&this.authObject.assessmentDetails.logo!==''){$('#header_left').css({'background':'none'})}
this.getCodeTemplate();if(this.challengeInfo.ungraded){this.addExtraLanguagesToList()}
this.editorAppSetupStarted=!0;if(this.challengeInfo.ungraded){var origLang=this.challengeInfo.language;this.challengeInfo.languageOriginal=origLang;var urlParams=new URLSearchParams(window.location.search);var setNewLanguage=urlParams.get('setLanguage');var languageArray=this.challengeInfo.editor_type==='frontend'?this.dropdownLanguagesFrontend:this.dropdownLanguages;if(setNewLanguage){var validLanguage=!1;for(var i=0;i<languageArray.length;i++){if(languageArray[i].value===setNewLanguage){validLanguage=!0;break}}
if(validLanguage){this.challengeInfo.language=setNewLanguage}}}
this.saveKey='saved-code-'+this.challengeInfo.challenge_title.replace(/\s/g,'')+'-'+this.challengeInfo.language;this.saveKeyFiletree='saved-code-filetree-'+this.challengeInfo.challenge_title.replace(/\s/g,'')+'-'+this.challengeInfo.language;this.saveKeyFiletreeContents='saved-code-filetreecontents-'+this.challengeInfo.challenge_title.replace(/\s/g,'')+'-'+this.challengeInfo.language;if(this.orgInfo){this.saveKey+='-'+this.orgInfo.test_id;if(this.authObject.email){this.saveKey+='-'+this.authObject.email}}
this.languageFromDropdown=this.challengeInfo.language;this.exampleArgInput=this.challengeInfo.example_arg;if(this.challengeInfo.parameter_type.indexOf(',')!==-1){this.secondParamRequired=!0;this.exampleArgInput2=this.challengeInfo.example_arg;$('.input_for_code').css({'width':'200px'})}
if(this.challengeInfo.editor_type==='languagespecific'&&!this.challengeInfo.ungraded){if(this.challengeInfo.challenge_title.indexOf('Android')!==-1){this.mobileDeviceType='Android';this.mobileDeviceContent=window.__DEFAULT_TEMPLATE_FOR_MOBILE_UI[this.challengeInfo.challenge_title]()}
if(this.challengeInfo.challenge_title.indexOf('iOS')!==-1){this.mobileDeviceType='iOS';this.mobileDeviceContent=window.__DEFAULT_TEMPLATE_FOR_MOBILE_UI[this.challengeInfo.challenge_title]()}}
if(window.__DEFAULT_CODE_PROJECT_BASED_CHALLENGES[this.challengeInfo.challenge_title]){this.projectBasedChallenge=!0}
if(this.challengeInfo.ungraded&&this.challengeInfo.filetree&&this.challengeInfo.filetreeWithContents&&this.challengeInfo.editor_type!=='jupyter'){this.projectBasedChallenge=!0}
if(this.orgInfo&&this.challengeInfo.editor_type==='algorithm'){if(this.orgInfo.languages&&typeof this.orgInfo.languages==='object'&&this.orgInfo.languages.length>0){if(this.orgInfo.languages.indexOf(this.languageFromDropdown)===-1){this.languageFromDropdown=this.orgInfo.languages[0];this.changeLanguage()}}}
if(this.orgInfo){var firstTimeSaved=window.localStorage.getItem(this.firstTimeKey);if(!firstTimeSaved){this.modals.firstTimeOnEditor=!0;window.localStorage.setItem(this.firstTimeKey,!0)}}
var version=window.__MAIN_LANGUAGE_LIST[this.challengeInfo.language]?window.__MAIN_LANGUAGE_LIST[this.challengeInfo.language].version:null;if(version&&this.challengeInfo.execute_file.indexOf('TPS')===-1){this.consoleOutputLog.unshift(version,'')}
if(this.challengeInfo.execute_file.indexOf('TPS')!==-1){for(var i=0;i<this.dropdownLanguages.length;i++){if(this.dropdownLanguages[i].value==='Python'){this.dropdownLanguages.splice(i,1);break}}}
if(window.location.href.indexOf('__nopretty=true')!==-1){window.__nopretty=!0}},mounted:function(){var that=this;if(this.errorObject&&this.errorObject.error){console.log(this.errorObject);return}
if(!window.location.hostname.includes('coderbyte.com')&&!window.location.hostname.includes('localhost')){$('#header_left').hide()}
this.setupSplitPanes();if(this.challengeInfo.editor_type==='spreadsheet'){this.spreadsheet=!0}else if(this.challengeInfo.editor_type==='jupyter'){this.jupyter=!0;var jupyterFilesToLoad=JSON.parse(JSON.stringify(this.challengeInfo.filetreeWithContents));for(var i=0;i<jupyterFilesToLoad.length;i++){if(jupyterFilesToLoad[i].path==='coderbyte_grading.py'){this.jupyterHiddenGradedFile=jupyterFilesToLoad[i];jupyterFilesToLoad.splice(i,1);break}}
this.filetreeJupyterFilesArray=jupyterFilesToLoad;var jupyterObject={};for(var i=0;i<this.filetreeJupyterFilesArray.length;i++){var node=this.filetreeJupyterFilesArray[i];jupyterObject[node.path]=node.content}
this.filetreeJupyterMapping=jupyterObject;this.setupBackendFramework('Jupyter');this.saveCodeInterval()}else{this.setupMonacoEditor()}
if(this.orgInfo){this.beginTimer();this.filterLanguages();if(this.orgInfo.org_slug==='uxtesting-jhafh'){return}
if(this.orgInfo&&this.challengeInfo.allow_reference_search&&this.challengeInfo.editor_type!=='spreadsheet'&&this.challengeInfo.editor_type!=='jupyter'){this.searchEnabledForOrg=!0;setTimeout(function(){console.log('web search is ready');that.setupEventListenerOnWebSearch()},3000)}}
if(this.challengeInfo.editor_type==='sqlsandbox'){if(this.challengeInfo.table_name.indexOf('maintable_')!==-1){this.deleteTableOnSessionEnd()}
this.getOriginalTableOnLoad()}
if(this.challengeInfo.editor_type==='mongodbsandbox'){this.deleteCollectionOnSessionEnd();this.getOriginalCollectionOnLoad()}
if(this.challengeInfo.editor_type==='spreadsheet'){this.deleteSpreadsheetOnSessionEnd()}
if(document.getElementById('lottieLoader')&&document.getElementById('lottieLoaderQuestions')){var params={container:document.getElementById('lottieLoader'),renderer:'svg',loop:!0,autoplay:!0,animationData:window.__animationPersonAtComputer};var params2={container:document.getElementById('lottieLoaderQuestions'),renderer:'svg',loop:!0,autoplay:!0,animationData:window.__animationWomanWithGlasses};var anim=lottie.loadAnimation(params);var anim2=lottie.loadAnimation(params2)}},watch:{filetree:{handler:function(before,after){this.fileTreeConstructWithContent()},deep:!0,},},methods:{setupSplitPanes:function(){var that=this;var onDragFn=function(){console.log('** resizing editor **');if(that.editor){that.editor.layout()}};if(this.challengeInfo.editor_type==='jupyter'){var chalDescSplitParams={orientation:'vertical',limit:0,position:'0%',};var codeSplitParams=!1}else if(this.challengeInfo.editor_type==='spreadsheet'){var chalDescSplitParams={orientation:'vertical',limit:400,position:'24%',onDrag:onDragFn,};var codeSplitParams=!1}else{var chalDescSplitParams={orientation:'vertical',limit:300,position:'24%',onDrag:onDragFn,};var splitterLeft={orientation:'horizontal',limit:80,position:'37%',onDrag:onDragFn,};var codeSplitParams={orientation:'vertical',limit:300,position:'62%',onDrag:onDragFn,}}
if(chalDescSplitParams){var splitter=$('#splitPanes').height(500).split(chalDescSplitParams)}
if(splitterLeft&&this.projectBasedChallenge){var splitterFiletree=$('#chalDescription').height(500).split(splitterLeft);$('.chalInstructions').css({'padding-bottom':'0px'})}
if(codeSplitParams){var splitterEditor=$('#codingArea').height(500).split(codeSplitParams)}
setTimeout(function(){var body=document.body;var html=document.documentElement;var _height=Math.max(body.scrollHeight,body.offsetHeight,html.clientHeight,html.scrollHeight,html.offsetHeight);$('#splitPanes, #chalDescription, #codingArea').css({'height':(_height-40)+'px'});$('.chalInstructions').css({'height':'auto'});if(that.challengeInfo.editor_type==='spreadsheet'){$('.spreadsheetEmbed').css({'height':(_height-40)+'px'})}
if(that.challengeInfo.editor_type==='jupyter'){$('#chalDescription, .vsplitter').remove();$('#codingArea').css({'left':'0','width':'100%'})}},0)},setupMonacoEditor:function(){require.config({waitSeconds:0,paths:{'vs':'https://coderbytejs.s3.amazonaws.com/monaco-editor/min/vs','monaco-vim':'https://coderbytejs.s3.amazonaws.com/monaco-vim/dist/monaco-vim','monaco-emacs':'https://coderbytejs.s3.amazonaws.com/monaco-emacs/dist/monaco-emacs',},});window.MonacoEnvironment={getWorkerUrl:function(workerId,label){return `data:text/javascript;charset=utf-8,${encodeURIComponent(`
self.MonacoEnvironment={baseUrl:'https://coderbytejs.s3.amazonaws.com/monaco-editor/min/'};importScripts('https://coderbytejs.s3.amazonaws.com/monaco-editor/min/vs/base/worker/workerMain.js');`
            )}`}};var that=this;var language_used=that.challengeInfo.language;var monaco_mode=window.__MAIN_LANGUAGE_LIST[language_used].monaco_mode;var theme='vs-dark';var themeSaved=window.localStorage.getItem(that.editorThemeKey);if(themeSaved){theme=themeSaved;if(theme==='vs'){this.editorLightMode=!0}}
require(['vs/editor/editor.main'],function(){that.editor=monaco.editor.create(document.getElementById('code'),{value:that.initDisplayCode,tabSize:2,scrollBeyondLastLine:!1,theme:theme,scrollBeyondLastColumn:40,language:monaco_mode,fontSize:13,minimap:{enabled:!1},});require(['monaco-vim'],function(MonacoVim){that.editorVimFunction=MonacoVim});require(['monaco-emacs'],function(MonacoEmacs){that.editorEmacsFunction=MonacoEmacs});var expDec=that.challengeInfo.editor_type==='frontend';monaco.languages.typescript.typescriptDefaults.setCompilerOptions({experimentalDecorators:expDec,allowNonTsExtensions:!0,target:99,});if(that.challengeInfo.editor_type==='frontend'&&that.challengeInfo.language==='TypeScript'){monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({noSemanticValidation:!0,noSyntaxValidation:!0,noSuggestionDiagnostics:!0})}else{monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({diagnosticCodesToIgnore:[2792,2580,2582,2304]});monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({diagnosticCodesToIgnore:[8008,8010]})}
if(window.__CUSTOM_EDITOR_SYNTAX_HIGHLIGHTING[that.challengeInfo.language]){that.updateEditorLanguage(that.challengeInfo.language)}
console.log('>> editor setup',that.editor);that.setupEditorFunctions();if(window.location.search.indexOf('runFrontEndTestCases=true')!==-1){var userSavedCode=window.localStorage.getItem('frontEndUserSavedCode');if(userSavedCode.indexOf('__filetreeWithContents')!==-1){var parsedCode=JSON.parse(userSavedCode);that.filetreeWithContents=parsedCode.__filetreeWithContents;for(var i=0;i<that.filetreeWithContents.length;i++){file=that.filetreeWithContents[i];if(that.challengeInfo.language==='JSX'&&file.name==='src/index.js'){userSavedCode=file.content;break}}}
that.editor.setValue(userSavedCode);setTimeout(function(){that.injectFrontendTests()},500)}})},setupEditorFunctions:function(){var that=this;this.setupCodeSaving();this.getSavedCode();this.setupIntelliSense();this.watchForKeyComboRunCode();if(this.orgInfo){this.checkForAdBlock();this.watchForCopying();this.watchForTabLeaving();this.saveCodeInterval()}
this.editor.addAction({id:'undo',label:'Undo',keybindings:[monaco.KeyMod.CtrlCmd|monaco.KeyCode.KEY_Z],contextMenuGroupId:'9_cutcopypaste',contextMenuOrder:0,run:()=>{that.editor.focus();that.editor.getModel()?.undo()}});this.editor.addAction({id:'redo',label:'Redo',keybindings:[monaco.KeyMod.CtrlCmd|monaco.KeyCode.KEY_Y],contextMenuGroupId:'9_cutcopypaste',contextMenuOrder:0.5,run:()=>{that.editor.focus();that.editor.getModel()?.redo()}})},watchForKeyComboRunCode:function(){var that=this;document.addEventListener('keydown',function(event){if((event.ctrlKey||event.metaKey)&&event.key==='Enter'){that.runCode();event.preventDefault()}})},setupBackendFramework:function(language){var that=this;var language=language;var challengeInfo=this.challengeInfo;if(this.backendFrameworkClient||this.backendFrameworkClientStartedConnecting)return;if(!window.Backend){this.$set(this.modals,'screenRecordingBlocked',!0);return}
const workspaceLanguageMapping={'Django':Backend.WorkspaceType.PYTHON,'Express':Backend.WorkspaceType.NODE,'MongoDB/Node':Backend.WorkspaceType.MONGODB,'RoR':Backend.WorkspaceType.ROR,'Jupyter':Backend.WorkspaceType.JUPYTER,'Spring':Backend.WorkspaceType.SPRING,};var workspaceId=`BEF-${challengeInfo.challenge_title.replace(/\s/g, '')}-${that.authObject.username}-${language}`;if(that.challengeInfo.preview_mode){workspaceId+='-'+Math.random().toString().substr(2,5)}
const workspaceConfig={id:workspaceId,type:workspaceLanguageMapping[language],ttl:language==='Jupyter'?240:120,};if(that.orgInfo){workspaceConfig.metadata={orgId:that.orgInfo.org_slug}}
this.$set(this.modals,'openingFrameworkContainer',!0);this.backendFrameworkClientStartedConnecting=!0;this.backendFrameworkClient=Backend.initWorkspaceClient(workspaceConfig,{},'https://back-end-frameworks.herokuapp.com/');console.log('** framework container connecting',this.backendFrameworkClient);window.__backendFrameworkClient=this.backendFrameworkClient;this.backendFrameworkClient.onWorkspaceReady(function(data){console.log('** framework container ready',data,language);if(language==='Jupyter'){that.enableJupyterNotebookUI({'jupyterNotebookLink':data.url});if(that.orgInfo&&that.orgInfo.candidate_cc){var poolKey='__cb_increasedPoolSize-'+that.orgInfo.test_id;var increasedPoolSize=window.localStorage.getItem(poolKey);if(that.orgInfo.candidate_cc>4&&that.orgInfo.candidate_cc<50&&!increasedPoolSize){$.post('https://back-end-frameworks.herokuapp.com/pool/4/1',{},function(data){console.log('*** increased pool size');window.localStorage.setItem(poolKey,'true')})}}
if(that.filetreeJupyterFilesArray.length>0){var BEFKey='BEF-'+that.saveKey;var workspaceStarted=window.localStorage.getItem(BEFKey);if(!workspaceStarted||workspaceStarted!==data.url){console.log('** framework container loading jupyter files',that.filetreeJupyterFilesArray);that.backendFrameworkClient.writeFiles(that.filetreeJupyterFilesArray);window.localStorage.setItem(BEFKey,data.url)}}}
setTimeout(function(){that.$set(that.modals,'openingFrameworkContainer',!1)},5000)});this.backendFrameworkClient.onWorkspaceChanged(function(data,selectedFilePath){console.log('** framework filetree changed',data,selectedFilePath);that.backendFrameworkClientStartedConnecting=!1;if(data&&data.contents&&data.contents.length>0){that.fileTreeModify({op:'replace',filetree:data.contents});if(language==='Jupyter'){that.filetreeJupyterMapping={};for(let i=0;i<data.contents.length;i++){if(data.contents[i].type===1&&data.contents[i].name!=='.jupyter_ystore.db'&&data.contents[i].name!=='.ipynb_checkpoints'){that.backendFrameworkClient.getFile(data.contents[i].path)}
if(data.contents[i].path==='coderbyte_grading.py'){that.backendFrameworkClient.execute('python coderbyte_grading.py').then(function(output){console.log('** JUPYTER WAS GRADED',output);that.jupyterGradingComplete=!0;that.backendFrameworkClient.delete('coderbyte_grading.py')})}}}}});this.backendFrameworkClient.onFileContent(function(data){console.log('** framework CALLBACK for getting file content',data);if(language==='Jupyter'){that.$set(that.filetreeJupyterMapping,data.path,data.content);console.log('** SAVED JUPYTER CONTENTS MAPPING',that.filetreeJupyterMapping)}});this.backendFrameworkClient.onFileChanged(function(data){if(language!=='Jupyter'||data.path.startsWith('.'))return;console.log('** framework CALLBACK for some file changing (JUPYTER ONLY)',data);that.backendFrameworkClient.getFile(data.path)});this.backendFrameworkClient.onWorkspaceShutdown(function(){console.log('** framework shutting down')})},addExtraLanguagesToList:function(){this.dropdownLanguages.unshift({'value':'Bash','display':'Bash'});this.dropdownLanguages.splice(12,0,{'value':'Plaintext','display':'Plaintext'});this.dropdownLanguages.splice(17,0,{'value':'Rust','display':'Rust'});this.dropdownLanguagesFrontend.push(...[{'value':'Angular','display':'Angular'},{'value':'Flutter','display':'Flutter'},{'value':'HTML','display':'HTML/CSS'},{'value':'React','display':'React'},{'value':'ReactNative','display':'React Native'},{'value':'Svelte','display':'Svelte'},{'value':'Vue.js','display':'Vue.js'},{'value':'Vue3','display':'Vue 3'},{'value':'Webpack','display':'Webpack'},])},checkForAdBlock:function(){if(!this.orgInfo)return;var that=this;if(this.orgInfo&&this.orgInfo.in_trial){setTimeout(function(){if(!document.getElementById('gDZwdnmjexXq')||window.SRLoader===undefined||window.sessionRewind===undefined||that.editor===null){console.log('candidate has adblock enabled');that.modals.copying=!1;that.modals.screenRecordingBlocked=!0}},5000)}},getCodeTemplate:function(){var allTemplates;var templateExists;if(this.projectBasedChallenge){this.initDisplayCode='';return}
if(this.challengeInfo.editor_type==='algorithm'){allTemplates=window.__DEFAULT_CODE_ALGS;templateExists=allTemplates[this.challengeInfo.language]}
if(this.challengeInfo.editor_type==='languagespecific'||this.challengeInfo.editor_type==='graphql'){allTemplates=window.__DEFAULT_CODE_LANG_SPECIFIC;templateExists=allTemplates[this.challengeInfo.challenge_title]}
if(this.challengeInfo.editor_type==='sqlsandbox'){templateExists=function(chalInfo){return `/*\n  write your SQL query below\n  to run only a specific line press CTRL + Enter \n*/\n\nSELECT * FROM `+chalInfo.table_name}}
if(this.challengeInfo.editor_type==='mongodbsandbox'){templateExists=function(chalInfo){return `{\n  "find": "${chalInfo.collection_name}"\n}`}}
if(this.challengeInfo.editor_type==='frontend'){allTemplates=window.__DEFAULT_CODE_FRONTEND_MAIN;templateExists=allTemplates[this.challengeInfo.challenge_title]}
if(templateExists){var chalInfoCopy=JSON.parse(JSON.stringify(this.challengeInfo));if(this.challengeInfo.masked_title&&this.challengeInfo.editor_type==='algorithm'){chalInfoCopy.challenge_title=this.challengeInfo.masked_title}
this.initDisplayCode=templateExists(chalInfoCopy).trim()}},setupIntelliSense:function(){if(!this.authObject.username)return;var language=this.challengeInfo.language;var languageObject=window.__MAIN_LANGUAGE_LIST[language];var lsp_url=languageObject.lsp_url;var monaco_mode=languageObject.monaco_mode;if(lsp_url){console.log('>> editor intellisense starting...');const socket=io(lsp_url,MonacoLSPProxy.SocketOptions);var provider;if(language==='Csharp'){provider=new MonacoLSPProxy.SocketCompletionItemProvider(socket,this.editor)}else{provider=new MonacoLSPProxy.SocketCompletionItemProvider(socket,this.editor,monaco.editor)}
provider.onInitialized(()=>{console.log('>> editor intellisense setup');monaco.languages.registerCompletionItemProvider(monaco_mode,provider);monaco.languages.registerSignatureHelpProvider(monaco_mode,provider);monaco.languages.registerHoverProvider(monaco_mode,provider)})}},setupCodeSaving:function(){var that=this;window.onbeforeunload=function(){if(that.saveKey){var curCode=that.editor.getValue();window.localStorage.setItem(that.saveKey,curCode);if(that.projectBasedChallenge&&that.saveKeyFiletree&&that.saveKeyFiletreeContents){window.localStorage.setItem(that.saveKeyFiletree,JSON.stringify(that.filetree));window.localStorage.setItem(that.saveKeyFiletreeContents,JSON.stringify(that.filetreeWithContents))}}}},getSavedCode:function(){var that=this;if(window.location.search.indexOf('runFrontEndTestCases=true')!==-1)return;if(this.projectBasedChallenge){var filetree=window.localStorage.getItem(that.saveKeyFiletree);var filetreeWithContents=window.localStorage.getItem(that.saveKeyFiletreeContents);if(filetree&&filetreeWithContents){console.log('loading saved filetree and contents from earlier');this.filetree=JSON.parse(filetree);this.filetreeWithContents=JSON.parse(filetreeWithContents)}else if(this.challengeInfo.filetree&&this.challengeInfo.filetreeWithContents&&this.challengeInfo.language===this.challengeInfo.languageOriginal){console.log('resetting filetree to custom challenge code');this.filetree=this.challengeInfo.filetree;this.filetreeWithContents=this.challengeInfo.filetreeWithContents}else{console.log('resetting filetree because none exists');if(this.challengeInfo.filetree)this.filetree=this.challengeInfo.filetree;if(this.challengeInfo.filetreeWithContents)this.filetreeWithContents=this.challengeInfo.filetreeWithContents;this.fileTreeModify({op:'reset',keepUserCreatedFiles:!0,});setTimeout(function(){if(that.editor.getValue().trim()===''){that.editor.setValue(window.__DEFAULT_COLLAB_CODE[that.challengeInfo.language])}},100)}
return}
if(that.saveKey&&window.localStorage&&window.localStorage.getItem(that.saveKey)){var savedCode=window.localStorage.getItem(that.saveKey);console.log('loading saved code from earlier');if(that.challengeInfo.editor_type==='sqlsandbox'&&that.challengeInfo.table_name){var regexMatch=savedCode.match(new RegExp('maintable_[A-Za-z0-9]+'));if(regexMatch){savedCode=savedCode.replace(/maintable_[A-Za-z0-9]+/g,that.challengeInfo.table_name)}}
that.editor.setValue(savedCode)}},resetCode:function(){var that=this;var r=confirm("Are you sure you want to reset back to the default code template? If you click OK you will lose your current code.");if(r===!0){window.localStorage.removeItem(that.saveKey);window.localStorage.removeItem(that.saveKeyFiletree);window.localStorage.removeItem(that.saveKeyFiletreeContents);this.saveKey=!1;this.saveKeyFiletree=!1;this.saveKeyFiletreeContents=!1;if(this.challengeInfo.ungraded){window.location.href=window.location.pathname}else{window.location.reload()}}},renderChallengeDescription:function(){var chalDescription=this.challengeInfo.challenge_description;if(!this.editorLightMode){chalDescription=chalDescription.replace(/f7f7f7/g,'314251');chalDescription=chalDescription.replace(/a21818/g,'dc4b4b').replace(/1f5cc3/g,'538cec');chalDescription=chalDescription.replace(/2474b7/g,'4c93ce')}
return chalDescription},toggleEditorTheme:function(){var that=this;this.editorLightMode=!this.editorLightMode;if(this.editorLightMode){monaco.editor.setTheme('vs');window.localStorage.setItem(that.editorThemeKey,'vs')}else{monaco.editor.setTheme('vs-dark');window.localStorage.setItem(that.editorThemeKey,'vs-dark')}},toggleEditorVimMode:function(){var that=this;if(this.editorEmacsMode)return;this.editorVimMode=!this.editorVimMode;if(this.editorVimMode){var statusNode=document.getElementById('vimStatusNode');that.editorVimObject=that.editorVimFunction.initVimMode(that.editor,statusNode)}else{that.editorVimObject.dispose()}},toggleEditorEmacsMode:function(){var that=this;if(this.editorVimMode)return;this.editorEmacsMode=!this.editorEmacsMode;if(this.editorEmacsMode){var statusNode=document.getElementById('vimStatusNode');that.editorEmacsObject=new that.editorEmacsFunction.EmacsExtension(that.editor);that.editorEmacsObject.onDidMarkChange(function(ev){statusNode.textContent=ev?'Mark Set!':'Mark Unset'});that.editorEmacsObject.onDidChangeKey(function(str){statusNode.textContent=str});that.editorEmacsObject.start()}else{that.editorEmacsObject.dispose()}},checkIfActionDisabled:function(){if(this.showValidatedFeedback&&this.showValidatedFeedback[0]==='success'){$.cursorMessage('Action disabled',{hideTimeout:0});$('button, span').live('mouseout',function(){$.hideCursorMessage()});return!0}
return!1},clearLog:function(){if(this.checkIfActionDisabled())return;this.consoleOutputLog=[]},changeLanguage:function(selectedOption=!1){var that=this;var newLang=selectedOption?selectedOption.value:this.languageFromDropdown;window.localStorage.setItem('default-language',newLang);console.log('set new default language',newLang);var newUrl=window.location.href.replace(':'+that.challengeInfo.language,':'+newLang);if(this.challengeInfo.ungraded){newUrl=window.location.pathname+'?setLanguage='+newLang}
window.location.href=newUrl},updateEditorLanguage:function(language,node){var that=this;var monaco_mode;var model=this.editor.getModel();var monaco_mode=window.__MAIN_LANGUAGE_LIST[language].monaco_mode;if(node){var splitFile=node.name.split('.');var ext=splitFile[splitFile.length-1];var extMapping=window.__MAIN_LANGUAGE_LIST_EXTENSION_MAP[ext];if(extMapping){monaco_mode=extMapping}}
monaco.editor.setModelLanguage(model,monaco_mode);if(language==='React')language='JSX';var onReactAndShowingJSFile=(language==='JSX'&&(!node||(node&&(node.name.indexOf('.js')!==-1||node.name.indexOf('.ts')!==-1))));if(window.__CUSTOM_EDITOR_SYNTAX_HIGHLIGHTING[language]){if(language!=='JSX'||onReactAndShowingJSFile){monaco.languages.register({id:language.toLowerCase()});monaco.languages.setMonarchTokensProvider(language.toLowerCase(),window.__CUSTOM_EDITOR_SYNTAX_HIGHLIGHTING[language])}
if(onReactAndShowingJSFile){var customThemeObject=window.__CUSTOM_EDITOR_SYNTAX_HIGHLIGHTING.__Themes[language];if(customThemeObject){monaco.editor.defineTheme(language+'-theme',customThemeObject);monaco.editor.setTheme(language+'-theme')}
monaco.editor.setModelLanguage(model,language.toLowerCase())}}},beginTimer:function(){if(!this.orgInfo)return;var that=this;var timerCountDown=this.orgInfo.timer_string;if(this.authObject.isAdmin){__showTimerMessage('(viewing as admin)',that.timerArea)}else{__beginTimer(timerCountDown,that.timerArea);if(this.orgInfo.timer_string!==''){setTimeout(function(){if(!window.__coderbyteTimerWebWorker){console.log('ERROR: timer has not started properly');that.modals.copying=!1;that.modals.screenRecordingBlocked=!0}},5000)}
console.log('>> candidate: timer started',timerCountDown)}},saveHighlightedCodeBlock:function(){var that=this;var model=that.editor.getModel();var selectedText=model.getValueInRange(that.editor.getSelection());window.localStorage.setItem(that.copiedCodeKey,selectedText);return selectedText},watchForTabLeaving:function(){if(!this.orgInfo)return;var that=this;window.onblur=function(){if(that.webSearchProps.pageModalDataContainerShow)return;window.__timeBeforeLeavingPage=new Date()};window.onfocus=function(){if(that.webSearchProps.pageModalDataContainerShow)return;if(window.__timeBeforeLeavingPage){var timeDiff=(new Date()-window.__timeBeforeLeavingPage)/1000;if(timeDiff<2)return;var params={challenge:that.challengeInfo.challenge_title,testId:that.orgInfo.test_id,duration:parseInt(timeDiff),};$.post('/backend/requests/editor/candidate_leaving_tab.php',params,function(data){console.log('tl saved',timeDiff)})}}},saveCodeInterval:function(){var that=this;setInterval(function(){that.submitChallenge(!0)},30000)},watchForCopying:function(){if(!this.orgInfo)return;var that=this;var __copied_from_editor='';var __copied_from_page=!1;var copiedFromPrevPage=window.localStorage.getItem(that.copiedCodeKey);if(copiedFromPrevPage){console.log('last copied code (from previous page) pulled from storage');__copied_from_editor=copiedFromPrevPage}
document.addEventListener('cut',function(e){__copied_from_page=!0;__copied_from_editor=that.saveHighlightedCodeBlock()});document.addEventListener('copy',function(e){__copied_from_page=!0;__copied_from_editor=that.saveHighlightedCodeBlock();if(e.srcElement&&e.srcElement.innerText&&e.srcElement.innerText!==''){var copiedText=window.getSelection().toString();if(copiedText.length<100)return;e.clipboardData.setData('text/plain',window.__gptInsertions.challenge+copiedText);e.preventDefault()}});this.editor.onDidPaste(function(pasteRange){var model=that.editor.getModel();var pasteText=model.getValueInRange(pasteRange.range);pasteText=pasteText.replace(window.__gptInsertions.challenge,'');if(pasteText&&pasteText.length>40&&pasteText!==__copied_from_editor){var gptMatches=model.findMatches(window.__gptInsertions.challenge,!0,!1,!1,null,!0);if(gptMatches&&gptMatches.length>0){__copied_from_page=!1;var op={identifier:{major:1,minor:1},range:gptMatches[0].range,text:'',forceMoveMarkers:!0};that.editor.executeEdits('replace gpt text',[op]);window.sessionRewind.logEvent('pastedChatGPT',{'username':that.authObject.username,'challengeTitle':that.challengeInfo.challenge_title,'testId':that.orgInfo.test_id,})}
if(!that.alreadyCopyPasted&&!__copied_from_page){that.alreadyCopyPasted=!0;that.$set(that.modals,'copying',!0);console.log('>> showing modal initial time not to copy code')}
__copied_from_page=!1;console.log('copying code!');window.sessionRewind.logEvent('pastedCode',{'username':that.authObject.username,'challengeTitle':that.challengeInfo.challenge_title,'testId':that.orgInfo.test_id,});$.post('/backend/requests/editor/candidate_copying.php',{challenge:that.challengeInfo.challenge_title,testId:that.orgInfo.test_id,content:pasteText},function(data){console.log('saved',data)})}});console.log('>> candidate: watching for copying')},filterLanguages:function(){if(!this.orgInfo)return;if(this.orgInfo.languages&&this.orgInfo.languages.length===0)return;var that=this;var allowedLanguages=[];for(var i=0;i<this.dropdownLanguages.length;i++){var langObject=this.dropdownLanguages[i];if(this.orgInfo.languages.indexOf(langObject.value)!==-1){allowedLanguages.push(langObject)}}
this.dropdownLanguages=allowedLanguages},toggleSubmitConfirm:function(){var editor_type=this.challengeInfo.editor_type;if(!this.confirmSubmitCode){if(this.orgInfo&&!this.challengeInfo.allow_redo&&editor_type!=='jupyter'){this.modals.assessmentBlockedRedo=!0}}
this.confirmSubmitCode=!this.confirmSubmitCode},submitChallenge:function(savingInBackground=!1){if(this.currentlySubmitting)return;var that=this;var username=this.authObject.username;var code=that.editor?that.editor.getValue().trim():null;var language=this.challengeInfo.language;var title=this.challengeInfo.challenge_title;var editor_type=this.challengeInfo.editor_type;var lastOutput=this.consoleOutputLog[that.consoleOutputLog.length-1];var runUnitTests=this.challengeInfo.unitTests;lastOutput=prettyifyJsonStringOutput(lastOutput,0);if(this.projectBasedChallenge){code={'__filetreeWithContents':this.filetreeWithContents,'__filetreeStructure':this.filetree,};code=JSON.stringify(code)}
var postRoute='';var redirectPage='';console.log('saving code...',title,language);if(!savingInBackground){this.currentlySubmitting=!0}
if(editor_type==='algorithm'){postRoute='/backend/requests/editor/submit_challenge.php';redirectPage='/process/TEMP_'+title+':'+language}
if(editor_type==='languagespecific'||editor_type==='sqlsandbox'||editor_type==='graphql'||editor_type==='mongodbsandbox'){postRoute='/backend/requests/editor/submit_nonalgorithm_challenge.php';redirectPage='/results/'+username+':'+title+':'+language}
if(editor_type==='frontend'){if(runUnitTests){postRoute='/backend/requests/editor/submit_nonalgorithm_challenge.php'}else{postRoute='/backend/requests/editor/submit_frontend_challenge_manual_queue.php'}
redirectPage='/results/'+username+':'+title+':'+language}
if(editor_type==='spreadsheet'){postRoute='/backend/requests/editor/submit_spreadsheet_challenge.php';redirectPage='/results/'+username+':'+title+':'+'Spreadsheet';code=this.challengeInfo.spreadsheet_url;lastOutput=this.challengeInfo.spreadsheet_id;window.onbeforeunload=function(){return null}}
if(editor_type==='jupyter'){if(!this.jupyterGradingComplete&&!savingInBackground){this.currentlySubmitting=!1;this.$set(this.modals,'submittingFrameworkContainer',!0);if(runUnitTests&&this.jupyterHiddenGradedFile){this.backendFrameworkClient.writeFile('coderbyte_grading.py',that.jupyterHiddenGradedFile.content)}
setTimeout(function(){that.jupyterGradingComplete=!0;that.submitChallenge()},20000);return}
postRoute='/backend/requests/editor/submit_nonalgorithm_challenge.php';redirectPage='/results/'+username+':'+title+':'+'Jupyter';filetreeWithContents=[];for(var key in that.filetreeJupyterMapping){if(key==='coderbyte_grading.py')continue;filetreeWithContents.push({name:key,path:key,content:that.filetreeJupyterMapping[key],})}
code={'__filetreeWithContents':filetreeWithContents};code=JSON.stringify(code)}
if(savingInBackground){postRoute='/backend/requests/editor/submit_challenge.php'}
$.post(postRoute,{user_code:code,challenge_title:title,challenge_language:language,final_output:lastOutput,editor_type:editor_type,unit_tests:runUnitTests,background_saving:savingInBackground.toString(),},function(data){if(data){try{data=JSON.parse(data);if(data&&data.status==='success'&&!savingInBackground){window.location.assign(redirectPage)}}catch(e){alert('Error (1) submitting code, please reload the page and try again.');console.log('ERROR saving code',e)}}else{alert('Error (2) submitting code, please reload the page and try again.');console.log('ERROR nothing returned from server')}
setTimeout(function(){that.currentlySubmitting=!1},3000)})},loadEditorContentFromFileTreeChange:function(node){var savedCode=this.getEditorContentFromForFileTreeNode(node);this.editor.setValue(savedCode||'')},getEditorContentFromForFileTreeNode:function(node){var file;for(var i=0;i<this.filetreeWithContents.length;i++){file=this.filetreeWithContents[i];if(file.id===node.id){return file.content}}
return''},saveEditorContentBeforeFileTreeChange:function(node){var file;var currentCode=this.editor.getValue().trim();for(var i=0;i<this.filetreeWithContents.length;i++){file=this.filetreeWithContents[i];if(node&&file.id===node.id){this.filetreeWithContents[i].content=currentCode;return}}},moveUserCreatedFiles:function(currentFiles,newFiletree){console.log('keeping user created files',currentFiles);for(var i=0;i<currentFiles.length;i++){if(currentFiles[i].main!=='true'&&currentFiles[i].type==='file'){currentFiles[i].selected='false';newFiletree.push(currentFiles[i])}}
return newFiletree},fileTreeModify:function(changes){var that=this;console.log('changes to filetree',changes);if(changes.op==='reset'){var newFiletree=[];var currentFiles=[];if(changes.keepUserCreatedFiles){currentFiles=JSON.parse(JSON.stringify(this.filetree))}
var language=this.challengeInfo.language;var defaultFileTree=window.__DEFAULT_CODE_PROJECT_BASED_CHALLENGES[this.challengeInfo.challenge_title];if(!defaultFileTree&&this.challengeInfo.ungraded){defaultFileTree=window.__DEFAULT_COLLAB_FILETREE[language]}
if(defaultFileTree){newFiletree=JSON.parse(JSON.stringify(defaultFileTree))}else{newFiletree=[{type:'file',id:'f_'+Math.random().toString().substr(2,5),name:window.__MAIN_LANGUAGE_LIST[this.challengeInfo.language].file_mapping,selected:'true',main:'true',}];console.log('ERROR: filetree structure not found, so resetting based on language')}
if(currentFiles&&currentFiles.length>0){newFiletree=this.moveUserCreatedFiles(currentFiles,newFiletree)}
this.filetree=newFiletree}
if(changes.op==='setSelected'){if(changes.node&&changes.node.readOnly==='true'){console.log('setting readOnly = true');this.editor.updateOptions({readOnly:!0})}
if(this.filetreeSelected&&this.filetreeSelected.readOnly==='true'&&(!changes.node.readOnly||changes.node.readOnly==='false')){console.log('setting readOnly = false');this.editor.updateOptions({readOnly:!1})}
if(JSON.stringify(this.filetreeSelected)===JSON.stringify(changes.node))return;if(this.filetreeSelected){this.saveEditorContentBeforeFileTreeChange(this.filetreeSelected);this.$set(this.filetreeSelected,'selected','false')}
if(changes.node.type==='file'){this.filetreeSelected__mostRecentFile=changes.node}
this.$set(changes.node,'selected','true');this.filetreeSelected=changes.node;this.filetreeSelectedParentDir=changes.parentNode;if(changes.node.type==='file'&&this.filetreeSelected){this.loadEditorContentFromFileTreeChange(changes.node)}
if(changes.node.type==='file'){this.updateEditorLanguage(this.challengeInfo.language,changes.node)}}
if(changes.op==='newFile'){var newFile,curLanguage;if(changes.typeCreate==='file'){curLanguage=this.challengeInfo.language;newFile={type:'file',id:'f_'+Math.random().toString().substr(2,5),name:'blank.'+window.__MAIN_LANGUAGE_LIST[curLanguage].file_mapping.split('.')[1],}}else{newFile={type:'dir',id:'d_'+Math.random().toString().substr(2,5),name:'dir',closed:'true',contents:[],}}
if(this.filetreeSelected&&this.filetreeSelected.type==='dir'){if(!this.filetreeSelected.contents)this.$set(this.filetreeSelected,'contents',[]);this.filetreeSelected.contents.push(newFile)}else if(this.filetreeSelectedParentDir){if(!this.filetreeSelectedParentDir.contents)this.$set(this.filetreeSelectedParentDir,'contents',[]);this.filetreeSelectedParentDir.contents.push(newFile)}else{this.filetree.push(newFile)}}
if(changes.op==='renamedFile'){if(changes.node.type==='file'){this.updateEditorLanguage(this.challengeInfo.language,changes.node)}}
if(changes.op==='deleteFile'){this.fileTreeConstructWithContent({deleteNode:changes.node})}},fileTreeConstructWithContent:function(opts){if(window.location.search.indexOf('runFrontEndTestCases=true')!==-1)return;var that=this;var filetreeFlat=[];var deleteComplete=!1;var node;function loopInDir(dir,dirName){var innerNode;if(!dir.contents)return;for(var i=0;i<dir.contents.length;i++){innerNode=dir.contents[i];if(opts&&opts.deleteNode){if(innerNode.id===opts.deleteNode.id){that.filetreeSelectedParentDir.contents.splice(i,1);deleteComplete=!0;i=i-1;continue}}
if(innerNode.type==='file'){filetreeFlat.push({id:innerNode.id,name:`${dirName}/${innerNode.name}`,content:that.getEditorContentFromForFileTreeNode(innerNode),});if(innerNode.__initContent&&(!that.challengeInfo.ungraded||that.challengeInfo.language!==that.challengeInfo.languageOriginal)){filetreeFlat[filetreeFlat.length-1].content=innerNode.__initContent;delete innerNode.__initContent}}else if(innerNode.type==='dir'){loopInDir(innerNode,`${dirName}/${innerNode.name}`)}}}
for(var i=0;i<this.filetree.length;i++){node=this.filetree[i];if(opts&&opts.deleteNode){if(node.id===opts.deleteNode.id){this.filetree.splice(i,1);deleteComplete=!0;i=i-1;continue}}
if(node.type==='file'){filetreeFlat.push({id:node.id,name:node.name,content:this.getEditorContentFromForFileTreeNode(node),});if(node.__initContent&&(!this.challengeInfo.ungraded||this.challengeInfo.language!==this.challengeInfo.languageOriginal)){filetreeFlat[filetreeFlat.length-1].content=node.__initContent;delete node.__initContent}}else if(node.type==='dir'){loopInDir(node,node.name)}}
if(deleteComplete){this.fileTreeModify({op:'setSelected',node:this.filetree[0],parentNode:undefined,sendServerUpdate:!0,})}
this.filetreeWithContents=filetreeFlat},updateCodeObject:debounce(function(){if(this.projectBasedChallenge){if(this.filetreeSelected&&this.filetreeSelected.type==='dir'&&this.filetreeSelected__mostRecentFile){console.log('updating previous file because directory was selected',this.filetreeSelected__mostRecentFile);this.saveEditorContentBeforeFileTreeChange(this.filetreeSelected__mostRecentFile)}else{this.saveEditorContentBeforeFileTreeChange(this.filetreeSelected)}
this.fileTreeConstructWithContent()}},250),enableJupyterNotebookUI:function(data){setTimeout(function(){var embedHTML='<iframe src="'+data.jupyterNotebookLink+'" referrerpolicy="no-referrer-when-downgrade" frameborder="0" style="background: transparent; border: 1px solid #ccc;"></iframe>';document.querySelector('#jupyter-notebook-wrapper').innerHTML=embedHTML},500)},runSpreadsheetTests:function(){var that=this;var spreadsheet_id=this.challengeInfo.spreadsheet_id;var title=this.challengeInfo.challenge_title;this.currentlyRunningCode=!0;$.post('/backend/requests/editor/spreadsheet_run_tests.php',{spreadsheet_id:spreadsheet_id,challenge_title:title},function(dataValidate){that.currentlyRunningCode=!1;try{data=JSON.parse(dataValidate);console.log(data);if(data.test_cases){that.showTestCasesForSpreadsheet=data.test_cases}}catch(e){console.log('Error getting values from spreadsheet.',dataValidate)}})},runCode:function(){var that=this;var input1=this.exampleArgInput;var editor_type=this.challengeInfo.editor_type;var codeObject={code:that.editor.getValue().trim(),inputs:[input1],username:that.authObject.username,};var model=that.editor.getModel();var selectedText=model.getValueInRange(that.editor.getSelection());if(selectedText)selectedText=selectedText.trim();if(this.secondParamRequired){var input2=this.exampleArgInput2;codeObject.inputs.push(input2)}
if(window.location.search.indexOf('runFrontEndTestCases=true')!==-1){codeObject.useFrontEndTestRoute=!0}
if(editor_type==='frontend'&&!codeObject.useFrontEndTestRoute){codeObject.frontEndRenderingKey=this.frontEndRenderingKey}
this.bothTestCasesCorrect=!1;this.currentlyRunningCode=!0;this.showValidatedFeedback=null;setTimeout(function(){that.currentlyRunningCode=!1},7000);if(this.autoClearLog){this.clearLog()}
if(this.projectBasedChallenge&&this.filetreeWithContents.length>1){codeObject.filetree=JSON.parse(JSON.stringify(this.filetreeWithContents))}
if(editor_type==='algorithm'||editor_type==='languagespecific'){if(codeObject.filetree&&codeObject.filetree[0].name.indexOf('/')!==-1){var mainFileIndex=0;for(var i=0;i<codeObject.filetree.length;i++){if(codeObject.filetree[i].name.indexOf('/')===-1){mainFileIndex=i;break}}
var mainFile=codeObject.filetree.splice(mainFileIndex,1);codeObject.filetree.unshift(mainFile[0])}
if(that.challengeInfo.language==='Bash'){codeObject.code=codeObject.code.replace(/\r/g,'');if(codeObject.filetree&&codeObject.filetree.length>0){codeObject.filetree[0].content=codeObject.filetree[0].content.replace(/\r/g,'')}}
__evalCode(codeObject,that.challengeInfo,function(output){console.log(output);that.processOutput(output)})}
if(editor_type==='sqlsandbox'){if(selectedText&&selectedText!==''){codeObject.code=selectedText}
var db_type=that.challengeInfo.language==='SQLSERVER'?'mssql':'mysql';if(that.challengeInfo.language==='PostgreSQL'){db_type='postgresql'}
that.challengeInfo.db_type=db_type;__evalSQLCode(codeObject,that.challengeInfo,function(output){console.log(output);that.processSQLOutput(output)})}
if(editor_type==='mongodbsandbox'){__evalMongoDBCode(codeObject,that.challengeInfo,function(output){console.log(output);that.processOutput(output)})}
if(editor_type==='graphql'){__evalGraphQLCode(codeObject,that.challengeInfo,function(output){console.log(output);that.processOutput(output)})}
if(editor_type==='frontend'){__evalFrontendCode(codeObject,that.challengeInfo,function(output){console.log(output);that.processFrontendOutput(output)})}},runTestCases:function(){var that=this;var counter=0;if(this.autoClearLog){this.clearLog()}
this.bothTestCasesCorrect=!1;this.consoleOutputLog.push('== RUNNING SAMPLE TEST CASES ==','');var loopSamples=2;var samplesToTest=this.challengeInfo.samples.slice(0);if(that.challengeInfo.samples.length==2){loopSamples=1}
if(this.challengeInfo.challenge_title==='HTML Elements'){samplesToTest[0]=$('<textarea />').html(samplesToTest[0]).text();samplesToTest[2]=$('<textarea />').html(samplesToTest[2]).text()}
setTimeout(function(){that.currentlyRunningTests=!1},7000);for(let i=0;i<loopSamples;i++){(function(){var codeObject={code:that.editor.getValue().trim(),inputs:[samplesToTest[i*2]],username:that.authObject.username,};var testCaseObject={input:[samplesToTest[i*2]],correctOutput:samplesToTest[(i*2)+1],};if(that.challengeInfo.output_mod_info){testCaseObject.correctOutput=that.challengeInfo.output_mod_info.final_outputs[i]}
that.currentlyRunningTests=!0;__evalCode(codeObject,that.challengeInfo,function(output){console.log(output);that.processOutput(output,testCaseObject);counter++;if(counter===2){that.currentlyRunningTests=!1;var consoleString=that.consoleOutputLog.toString();var consoleStringLastPart=consoleString.substr(consoleString.lastIndexOf('RUNNING SAMPLE TEST CASES'));var countCorrectOutputs=(consoleStringLastPart.match(/<< CORRECT >>/g)||[]).length;if(countCorrectOutputs===2){that.bothTestCasesCorrect=!0}
that.consoleOutputLog.push('== 8 TEST CASES HIDDEN ==','')}})})(i)}},runFrontEndUnitTests:function(){var that=this;this.currentlyRunningTests=!0;this.runCode();setTimeout(function(){var language=that.challengeInfo.language;var codeObject={code:that.editor.getValue().trim(),inputs:[],};var challengeObject={execute_file:'executeCode.php',editor_type:that.challengeInfo.editor_type,parameter_type:'n/a',language:language,};if(that.filetreeWithContents.length>1){codeObject.filetree=that.filetreeWithContents}
challengeObject.challenge_title=language;codeObject.runningUnitTests=!0;codeObject.frontEndRenderingKey=that.frontEndRenderingKey;__evalFrontendCode(codeObject,challengeObject,function(output){console.log(output);that.currentlyRunningTests=!1;that.injectUnitTestOutputToConsole(output.output);that.consoleOutputLog.push(output.output)})},2000)},injectUnitTestOutputToConsole:function(unitTestOutputString){$('.unitTestOutputOverlay .unitTestContent').html(unitTestOutputString);$('.unitTestOutputOverlay').show()},closeUnitTestOutput:function(){$('.unitTestOutputOverlay').hide()},convertArrayToSimpleString:function(arrString){return arrString.trim().replace(/"/g,'').replace(/'/g,'').replace(/\[/g,'').replace(/\]/g,'').replace(/\s/g,'').replace(/\n/g,'')},processOutput:function(output,testCaseObject){var that=this;var language=this.challengeInfo.language;this.currentlyRunningCode=!1;var data=undefined;if(testCaseObject){that.consoleOutputLog.push('== INPUT ==');that.consoleOutputLog.push(testCaseObject.input,'');that.consoleOutputLog.push('== OUTPUT ==')}
try{data=JSON.parse(output)}catch(e){that.consoleOutputLog.push('Error executing code, timeout occurred.');that.errorFromLastOutput=!0}
if(data){if(that.challengeInfo.editor_type==='graphql'){if(data&&data.output){var dataOutput=prettyifyJsonStringOutput(data.output);that.consoleOutputLog.push(dataOutput+'\n');that.errorFromLastOutput=!1;if(data.output.indexOf('errors')!==-1){that.errorFromLastOutput=!0}}}else if(that.challengeInfo.editor_type==='mongodbsandbox'){if(data&&data.output){var dataOutput=prettyifyJsonStringOutput(data.output);that.consoleOutputLog.push(dataOutput+'\n');that.errorFromLastOutput=!1;if(data.output.toLowerCase().indexOf('error')!==-1&&data.output.indexOf('lastErrorObject')===-1){that.errorFromLastOutput=!0}
if(!that.MongoDBOriginalTableOutput){that.MongoDBOriginalTableOutput=prettyifyJsonStringOutput(data.output)}}}else{if(language==='R'){data.stdout=data.stdout.replace(/\[1\] /g,'')}
if(data.stderr&&data.stderr!==''){that.consoleOutputLog.push(data.stderr);that.errorFromLastOutput=!0}
if(data.error&&data.error!==''){that.consoleOutputLog.push(data.error);that.errorFromLastOutput=!0}
if(data.stdout&&data.stdout!==''){that.errorFromLastOutput=!1;if(language==='Python3'||language==='Python'||language==='JavaScript'||language==='TypeScript'||language==='PHP'||language==='Bash'||language==='Ruby'||language==='Java'||language==='Swift'||language==='Go'){if(data.stdout.length>=20000){data.stdout+=' ... <OUTPUT TRUNCATED>'}}else{if(data.stdout.length>=4000){data.stdout+=' ... <OUTPUT TRUNCATED>'}}
that.consoleOutputLog.push(data.stdout)}
if(testCaseObject&&data.stdout){var modOutput='"'+data.stdout.trim()+'"';modOutput=modOutput.replace('True','true');modOutput=modOutput.replace('False','false');if(modOutput===testCaseObject.correctOutput||modOutput.replace(/"/g,'')===testCaseObject.correctOutput||that.convertArrayToSimpleString(data.stdout)===that.convertArrayToSimpleString(testCaseObject.correctOutput)){that.consoleOutputLog.push('<< CORRECT >>','')}else{that.consoleOutputLog.push('<< WRONG >>');that.consoleOutputLog.push('<< EXPECTED OUTPUT: '+testCaseObject.correctOutput+' >>','')}}
if(that.mobileDeviceType!==null){var dataToShowInDevice=data.stderr===''?data.stdout:data.stderr;that.mobileDeviceContent=window.__DEFAULT_TEMPLATE_FOR_MOBILE_UI[that.challengeInfo.challenge_title](dataToShowInDevice)}}}
if(that.challengeInfo.editor_type==='languagespecific'||that.challengeInfo.editor_type==='graphql'||that.challengeInfo.editor_type==='mongodbsandbox'){that.validateLanguageSpecific()}
setTimeout(function(){var textarea=document.getElementById('consoleOutputMain');if(textarea){textarea.scrollTop=textarea.scrollHeight+50000}},20)},processSQLOutput:function(output){var that=this;this.currentlyRunningCode=!1;try{var data=JSON.parse(output)}catch(e){that.SQLTableOutput='<p class="error">Error executing code</p>'}
if(data&&data.error){if(data.error_msg){that.SQLTableOutput='<p class="error">'+data.error+'<br><br>'+data.error_msg+'</p>'}else{that.SQLTableOutput='<p class="error">'+data.error+'</p>'}}
if(data&&data.output){that.consoleOutputLog.push(JSON.stringify(data.output));that.SQLTableOutput=that.generateSQLTableOutput(data.output);that.SQLShowingOriginalTable=!1;if(!that.SQLOriginalTableOutput){that.SQLOriginalTableOutput=data.output}}
that.validateLanguageSpecific()},processFrontendOutput:function(output){var that=this;setTimeout(function(){that.currentlyRunningCode=!1},2000);$('.placeholderPreview').hide();$('.iframeViewEmbed').show();var iframeSrc=$('.iframeViewEmbed').attr('src');if(!iframeSrc||iframeSrc===''){$('.iframeViewEmbed').attr('src',output.result.url)}
this.frontEndRenderingKey=output.result.id},injectFrontendTests:function(){var that=this;var code=that.editor.getValue().trim();var thisChalTests=window.__DEFAULT_CODE_FRONTEND_TESTS[this.challengeInfo.challenge_title];var urlParams=new URLSearchParams(window.location.search);var username=urlParams.get('username');if(thisChalTests){var codeWithTests=code;if(['JSX','TypeScript','JavaScript'].indexOf(this.challengeInfo.language)!==-1){codeWithTests='window.alert = function() { return null; };\nwindow.confirm = function() { return null; };\nwindow.prompt = function() { return null; };\n\n'+code}
codeWithTests=codeWithTests.replace(/alert\(/g,'//alert(').replace(/confirm\(/g,'//confirm(');if(that.challengeInfo.challenge_title.indexOf('Vue')!==-1){codeWithTests=codeWithTests.replace('</script>',thisChalTests({username:username,challenge:that.challengeInfo.challenge_title,code:code.replace(/'/g,"\\'"),}))}else{codeWithTests=codeWithTests+'\n\n'+thisChalTests({username:username,challenge:that.challengeInfo.challenge_title,code:code.replace(/'/g,"\\'"),})}
if(that.projectBasedChallenge){for(var i=0;i<that.filetreeWithContents.length;i++){file=that.filetreeWithContents[i];if(that.challengeInfo.language==='JSX'&&file.name==='src/index.js'){that.filetreeWithContents[i].content=codeWithTests;break}}}
that.editor.setValue(codeWithTests);that.runCode();setTimeout(function(){that.editor.setValue(code)},4000)}else{console.log('no tests exist yet for this front-end challenge')}},validateLanguageSpecific:function(){if(this.challengeInfo.ungraded&&!this.challengeInfo.unitTests)return;var that=this;var title=this.challengeInfo.challenge_title;var language=this.challengeInfo.language;var lastOutput=this.consoleOutputLog[that.consoleOutputLog.length-1];var runUnitTests=this.challengeInfo.unitTests;lastOutput=prettyifyJsonStringOutput(lastOutput,0);var testId=!1;if(this.orgInfo){testId=this.orgInfo.test_id}
console.log('validating answer...');this.showValidatedFeedback=['running','Validating output...'];$.post('/backend/requests/editor/language_specific_validation.php',{output:lastOutput,challenge_title:title,test_id:testId,challenge_language:language,unit_tests:runUnitTests},function(dataValidate){if(!dataValidate||dataValidate===''){that.showValidatedFeedback=['failure','Your output is incorrect.'];return}
var dataValidate=JSON.parse(dataValidate);if(typeof dataValidate.correct==='boolean'){if(dataValidate.correct===!0){that.showValidatedFeedback=['success','Success! Your output is correct, click Submit above now.']}else{that.showValidatedFeedback=['failure','Your output is incorrect.']}}})},generateSQLTableOutput:function(rows){var table_output='<table cellspacing="0" cellpadding="0"><tr>';var firstRow=rows[0];var headers=Object.keys(firstRow);for(var i=0;i<headers.length;i++){table_output+='<th>'+headers[i]+'</th>'}
table_output+='</tr>';for(var i=0;i<rows.length;i++){table_output+='<tr>'
var rowValues=Object.values(rows[i]);for(var j=0;j<rowValues.length;j++){table_output+='<td>'+(typeof rowValues[j]==='object'&&rowValues[j]!=null&&rowValues[j].date?rowValues[j].date:rowValues[j])+'</td>'}
table_output+='</tr>'}
table_output+='</table>';return table_output},deleteTableOnSessionEnd:function(){var that=this;window.onbeforeunload=function(){if(that.challengeInfo.table_name){$.post('/backend/requests/editor/sql_sandbox_delete_table.php',{table_name:that.challengeInfo.table_name},function(data){console.log(data)})}}},deleteCollectionOnSessionEnd:function(){var that=this;window.onbeforeunload=function(){if(that.challengeInfo.collection_name){$.post('/backend/requests/editor/mongodb_sandbox_delete_collection.php',{collection_name:that.challengeInfo.collection_name},function(data){console.log(data)})}}},deleteSpreadsheetOnSessionEnd:function(){var that=this;window.onbeforeunload=function(){if(that.challengeInfo.spreadsheet_id){$.post('/backend/requests/editor/spreadsheets_delete_sheet.php',{spreadsheet_id:that.challengeInfo.spreadsheet_id},function(data){console.log(data)})}}},getOriginalTableOnLoad:function(){var that=this;setTimeout(function(){if(that.editor){that.runCode()}else{that.getOriginalTableOnLoad()}},100)},getOriginalCollectionOnLoad:function(){var that=this;setTimeout(function(){if(that.editor){that.runCode()}else{that.getOriginalCollectionOnLoad()}},100)},toggleTables:function(){if(this.checkIfActionDisabled())return;if(!this.SQLShowingOriginalTable){this.SQLTableOutput=this.generateSQLTableOutput(this.SQLOriginalTableOutput)}else{var lastOutput=this.consoleOutputLog[this.consoleOutputLog.length-1];this.SQLTableOutput=this.generateSQLTableOutput(JSON.parse(lastOutput))}
this.SQLShowingOriginalTable=!this.SQLShowingOriginalTable},toggleDevice:function(){this.mobileDeviceShowing=!this.mobileDeviceShowing},toggleCollections:function(){if(this.checkIfActionDisabled())return;this.consoleOutputLog.push(this.MongoDBOriginalTableOutput+'\n');setTimeout(function(){var textarea=document.getElementById('consoleOutputMain');textarea.scrollTop=textarea.scrollHeight+50000},20)},guestSubmit:function(){this.modals.guestWantsToSubmit=!0},setupEventListenerOnWebSearch:function(){var that=this;var config={attributes:!0,childList:!0,characterData:!0};var observer=new MutationObserver(function(mutations){console.log('links in search area updated, event listeners added to anchors now!',mutations);that.setupEventListenersOnSearchLinks();var phrase=$(that.webSearchProps.textArea).val();$.post('/backend/requests/editor/candidate_reference_search.php',{url:'__onlySearch__',phrase:phrase,challenge:that.challengeInfo.challenge_title,testId:that.orgInfo.test_id,},function(data){console.log('saved ref search',data)})});var mainSearchContainer=document.querySelector(that.webSearchProps.mainSearchContainer);if(mainSearchContainer){observer.observe(mainSearchContainer,config)}else{console.log('error: event listeners not added to search results because node is not loaded page')}},setupEventListenersOnSearchLinks:function(){var that=this;var resultRows=$(that.webSearchProps.searchResultRow);for(var i=0;i<resultRows.length;i++){var resultRow=resultRows[i];var anchor=$(resultRow).find('a.gs-title')[0];if(!anchor)continue;anchor.addEventListener('click',function(event){var anchorObject=this;var url=anchorObject.href;if(url.indexOf('.pdf')===-1&&url.indexOf('youtube.com')===-1){event.preventDefault();that.webSearchLoadPageData(anchorObject,event)}})}},webSearchLoadPageData:function(anchorObject,event){var that=this;var mouseX=event.pageX;var mouseY=event.pageY;var url=anchorObject.href;var phrase=$(that.webSearchProps.textArea).val();var windowHeight=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;var iframe=document.querySelector(that.webSearchProps.pageiframeContainer);iframe.src="data:text/html;charset=utf-8,"+"<html>Loading...</html>";this.webSearchProps.toolbarExternalLink=!1;this.webSearchProps.pageModalDataContainerShow=!0;$(that.webSearchProps.pageModalDataContainer).css({top:(mouseY<=(windowHeight/2))?mouseY-20:mouseY-440,left:mouseX-20,});if(this.webSearchCache[url]){console.log('loading page data from cache',url),iframe.src="data:text/html;charset=utf-8,"+this.webSearchCache[url];return}
$.post('/backend/requests/editor/search_get_page_data.php',{url:url},function(pageData){var setPageData;if(!pageData||pageData===''){if(that.webSearchProps.timesAttempted<3){that.webSearchProps.timesAttempted+=1;setPageData="<html>Loading... ("+that.webSearchProps.timesAttempted+")</html>";setTimeout(function(){that.webSearchLoadPageData(anchorObject,event)},1000)}else{that.webSearchProps.timesAttempted=0;that.webSearchProps.toolbarExternalLink=url;setPageData="<html>Failed getting page data, please click <strong>Go to site</strong> above.</html>"}}else{that.webSearchProps.timesAttempted=0;setPageData=escape(pageData);that.webSearchCache[url]=setPageData}
iframe.src="data:text/html;charset=utf-8,"+setPageData});$.post('/backend/requests/editor/candidate_reference_search.php',{url:url,phrase:phrase,challenge:that.challengeInfo.challenge_title,testId:that.orgInfo.test_id,},function(data){console.log('saved ref search',data)})},pageModalAction:function(action){var that=this;if(action==='close'){this.webSearchProps.pageModalDataContainerShow=!1;$(that.webSearchProps.pageModalDataContainer).removeClass('expanded')}},},});$('.homebutton').attr('href','/challenges');$('.submitDisabled').live('click',function(){$.cursorMessage('Disabled in preview mode',{hideTimeout:0})});$('.submitDisabled').live('mouseout',function(){$.hideCursorMessage()});$('.selectedLanguage.disabled').live('click',function(){$.cursorMessage('This is a unit testing challenge, so you cannot change the language.',{hideTimeout:0})});$('.selectedLanguage.disabled').live('mouseout',function(){$.hideCursorMessage()});if(window.interact){interact('.draggable').resizable({edges:{right:!0,bottom:!0},listeners:{move(event){var target=event.target
var x=(parseFloat(target.getAttribute('data-x'))||0)
var y=(parseFloat(target.getAttribute('data-y'))||0)
target.style.width=(event.rect.width-30)+'px'
target.style.height=(event.rect.height-30)+'px'
x+=event.deltaRect.left
y+=event.deltaRect.top
target.style.webkitTransform=target.style.transform='translate('+x+'px,'+y+'px)'
target.setAttribute('data-x',x)
target.setAttribute('data-y',y)}},modifiers:[interact.modifiers.restrictSize({min:{width:100,height:50}})]}).draggable({inertia:!0,modifiers:[interact.modifiers.restrictRect({restriction:'#container',endOnly:!0})],autoScroll:!0,listeners:{move(event){var target=event.target
var x=(parseFloat(target.getAttribute('data-x'))||0)+event.dx
var y=(parseFloat(target.getAttribute('data-y'))||0)+event.dy
target.style.webkitTransform=target.style.transform='translate('+x+'px, '+y+'px)'
target.setAttribute('data-x',x)
target.setAttribute('data-y',y)}}})}})